package com.springmvc.api;

import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVRecord;
import org.json.JSONArray;
import org.json.JSONObject;

import com.springmvc.domain.Stadium;

import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;

public class CsvToJsonConverter {

	public static void main(String[] args){
        // 상대 경로 사용
        String csvFilePath = "csv/stadiumInGN.csv"; // 프로젝트 루트 디렉토리에서 상대 경로

        try (InputStream inputStream = CsvToJsonConverter.class.getClassLoader().getResourceAsStream(csvFilePath);
        	 InputStreamReader reader = new InputStreamReader(inputStream, "EUC-KR");
             CSVParser csvParser = new CSVParser(reader, CSVFormat.DEFAULT.withFirstRecordAsHeader())) {
        	int i=0;
            JSONArray jsonArray = new JSONArray();
            List<Stadium> listOfStd = new ArrayList<Stadium>();            
            for (CSVRecord csvRecord : csvParser) 
            {	i++;
                JSONObject jsonObject = new JSONObject();
                csvRecord.toMap().forEach((key, value) -> jsonObject.put(key, value));
                jsonArray.put(jsonObject);
               
               isAllValuesEmpty(jsonObject);
               
               
            }
         
            

        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    public static void isAllValuesEmpty(JSONObject jsonObject) 
    {
        // 모든 키에 대해 반복
        for (String key : jsonObject.keySet()) {
            // 해당 키의 값 가져오기
            Object value = jsonObject.get(key);
        	//System.out.println(key + value);
            // 값이 String 타입이고 ""와 같은지 검사
            if (value instanceof String && !((String) value).isEmpty()) 
            {
            	jsonObject.put(key, "null");
            	System.out.println(key+value);
            }
        }

    }
 
}
